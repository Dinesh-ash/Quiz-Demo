{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddine\\\\Downloads\\\\Challenger-master\\\\Challenger-master\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // Import jwtDecode to decode the token\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const token = res.data.token;\n      localStorage.setItem('token', token); // Save token to localStorage\n\n      // Decode the token to get the user's role\n      const decodedToken = jwtDecode(token);\n      const userRole = decodedToken.role;\n      setMessage('Login Successful!');\n\n      // Redirect based on role\n      if (userRole === 'admin') {\n        navigate('/admin/dashboard'); // Redirect to Admin Dashboard for admin users\n      } else {\n        navigate('/quiz'); // Redirect to Quiz Page for regular users\n      }\n    } catch (err) {\n      setMessage('Invalid email or password.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"xEeet4en/JMpbK3DCeRLGLozoKY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jwtDecode","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","navigate","handleLogin","e","preventDefault","res","post","token","data","localStorage","setItem","decodedToken","userRole","role","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ddine/Downloads/Challenger-master/Challenger-master/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {jwtDecode} from 'jwt-decode'; // Import jwtDecode to decode the token\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setMessage('');\n\n        try {\n            const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });\n            const token = res.data.token;\n            localStorage.setItem('token', token); // Save token to localStorage\n\n            // Decode the token to get the user's role\n            const decodedToken = jwtDecode(token);\n            const userRole = decodedToken.role;\n\n            setMessage('Login Successful!');\n\n            // Redirect based on role\n            if (userRole === 'admin') {\n                navigate('/admin/dashboard'); // Redirect to Admin Dashboard for admin users\n            } else {\n                navigate('/quiz'); // Redirect to Quiz Page for regular users\n            }\n        } catch (err) {\n            setMessage('Invalid email or password.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h2>Login</h2>\n            <form onSubmit={handleLogin}>\n                <input\n                    type=\"email\"\n                    placeholder=\"Enter your email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    className=\"login-input\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    className=\"login-input\"\n                />\n                <button type=\"submit\" className=\"login-button\" disabled={loading}>\n                    {loading ? 'Logging in...' : 'Login'}\n                </button>\n            </form>\n            {message && <p className=\"login-message\">{message}</p>}\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}