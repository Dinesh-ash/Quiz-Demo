{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddine\\\\Downloads\\\\Challenger-master\\\\Challenger-master\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Quiz from './components/Quiz';\nimport Landing from './components/Landing';\nimport Navbar from './components/Navbar'; // Import the Navbar component\nimport AdminDashboard from './components/AdminDashboard'; // Import the AdminDashboard component\nimport { jwtDecode } from 'jwt-decode'; // Use named import for jwtDecode\n\n// Function to check if the user is admin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkIfAdmin = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const decodedToken = jwtDecode(token); // Decode token to get role\n    return decodedToken.role === 'admin'; // Check if the role is 'admin'\n  }\n  return false; // If no token, user is not admin\n};\nfunction App() {\n  _s();\n  const location = useLocation(); // Hook to get current location\n\n  // Conditionally render Navbar based on the current route\n  const showNavbar = location.pathname !== '/quiz';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showNavbar && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 28\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-dashboard\",\n        element: checkIfAdmin() ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useLocation","Navigate","Login","Register","Quiz","Landing","Navbar","AdminDashboard","jwtDecode","jsxDEV","_jsxDEV","checkIfAdmin","token","localStorage","getItem","decodedToken","role","App","_s","location","showNavbar","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["C:/Users/ddine/Downloads/Challenger-master/Challenger-master/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Quiz from './components/Quiz';\nimport Landing from './components/Landing';\nimport Navbar from './components/Navbar'; // Import the Navbar component\nimport AdminDashboard from './components/AdminDashboard';  // Import the AdminDashboard component\nimport { jwtDecode } from 'jwt-decode'; // Use named import for jwtDecode\n\n// Function to check if the user is admin\nconst checkIfAdmin = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        const decodedToken = jwtDecode(token);  // Decode token to get role\n        return decodedToken.role === 'admin';  // Check if the role is 'admin'\n    }\n    return false;  // If no token, user is not admin\n};\n\nfunction App() {\n    const location = useLocation(); // Hook to get current location\n\n    // Conditionally render Navbar based on the current route\n    const showNavbar = location.pathname !== '/quiz';\n\n    return (\n        <div>\n            {showNavbar && <Navbar />} {/* Only show Navbar if not on /quiz */}\n\n            <Routes>\n                <Route path=\"/\" element={<Landing />} />\n                <Route path=\"/register\" element={<Register />} />\n                <Route path=\"/login\" element={<Login />} />\n                \n                {/* Protect the admin dashboard route and make sure only admin can access */}\n                <Route \n                    path=\"/admin-dashboard\" \n                    element={checkIfAdmin() ? <AdminDashboard /> : <Navigate to=\"/\" />}\n                />\n                \n                <Route path=\"/quiz\" element={<Quiz />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default function AppWrapper() {\n    return (\n        <Router>  {/* Wrapping the App component in Router */}\n            <App />\n        </Router>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}