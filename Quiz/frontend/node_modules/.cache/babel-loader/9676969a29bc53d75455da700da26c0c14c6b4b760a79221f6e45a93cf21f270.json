{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddine\\\\Downloads\\\\Challenger-master\\\\Challenger-master\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeQuiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]); // Store the quiz questions\n  const [currentQuestion, setCurrentQuestion] = useState(0); // Track current question index\n  const [score, setScore] = useState(0); // Track the score\n  const [timer, setTimer] = useState(30); // Timer for each question\n  const [quizCompleted, setQuizCompleted] = useState(false); // Track quiz completion\n  const navigate = useNavigate(); // To navigate to other pages\n\n  // Fetch quiz questions from the backend\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/quiz'); // Adjust your endpoint\n        setQuestions(res.data); // Store the questions\n      } catch (err) {\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  // Timer logic for each question\n  useEffect(() => {\n    if (timer <= 0) {\n      handleNextQuestion(); // Move to the next question when timer hits 0\n    } else {\n      const timerId = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n      return () => clearInterval(timerId); // Cleanup timer when component unmounts\n    }\n  }, [timer]);\n\n  // Handle user answer selection\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(score + 1); // Increment score if answer is correct\n    handleNextQuestion(); // Move to the next question\n  };\n\n  // Move to the next question\n  const handleNextQuestion = async () => {\n    if (currentQuestion < questions.length - 1) {\n      setTimer(30);\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const token = localStorage.getItem('token'); // Retrieve the token\n\n      try {\n        await axios.post('http://localhost:5000/api/score/admin/score', {\n          score: score,\n          totalQuestions: questions.length\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}` // Send the token in the header\n          }\n        });\n      } catch (err) {\n        console.error(\"Error saving score:\", err);\n      }\n      setQuizCompleted(true);\n    }\n  };\n\n  // Display the results and \"Back to Home\" button\n  const renderQuizCompletion = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-completion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-header\",\n      children: \"Quiz Completed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quiz-score\",\n      children: [\"Your score: \", score, \"/\", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-home-btn\",\n      onClick: () => navigate('/') // Navigate back to the home page\n      ,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n\n  // Show loading message if questions are not yet fetched\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 35\n  }, this);\n\n  // Display questions if quiz is not completed yet\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"Time Left: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), quizCompleted ? renderQuizCompletion() // Render the completion screen\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"quiz-question\",\n        children: [\"Question \", currentQuestion + 1, \": \", questions[currentQuestion].question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quiz-option\",\n          onClick: () => handleAnswer(index === questions[currentQuestion].correctOption) // Check if answer is correct\n          ,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeQuiz, \"h9O2hvcfZ+yt90U9w4kpNg08svY=\", false, function () {\n  return [useNavigate];\n});\n_c = CodeQuiz;\nexport default CodeQuiz;\nvar _c;\n$RefreshReg$(_c, \"CodeQuiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeQuiz","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","timer","setTimer","quizCompleted","setQuizCompleted","navigate","fetchQuestions","res","get","data","err","console","error","handleNextQuestion","timerId","setInterval","prevTimer","clearInterval","handleAnswer","isCorrect","length","token","localStorage","getItem","post","totalQuestions","headers","Authorization","renderQuizCompletion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","index","correctOption","_c","$RefreshReg$"],"sources":["C:/Users/ddine/Downloads/Challenger-master/Challenger-master/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate for navigation\nimport './Quiz.css';\n\nconst CodeQuiz = () => {\n    const [questions, setQuestions] = useState([]);  // Store the quiz questions\n    const [currentQuestion, setCurrentQuestion] = useState(0);  // Track current question index\n    const [score, setScore] = useState(0);  // Track the score\n    const [timer, setTimer] = useState(30);  // Timer for each question\n    const [quizCompleted, setQuizCompleted] = useState(false);  // Track quiz completion\n    const navigate = useNavigate(); // To navigate to other pages\n\n    // Fetch quiz questions from the backend\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            try {\n                const res = await axios.get('http://localhost:5000/api/quiz');  // Adjust your endpoint\n                setQuestions(res.data);  // Store the questions\n            } catch (err) {\n                console.error('Error fetching questions:', err);\n            }\n        };\n        fetchQuestions();\n    }, []);\n\n    // Timer logic for each question\n    useEffect(() => {\n        if (timer <= 0) {\n            handleNextQuestion();  // Move to the next question when timer hits 0\n        } else {\n            const timerId = setInterval(() => {\n                setTimer((prevTimer) => prevTimer - 1);\n            }, 1000);\n            return () => clearInterval(timerId);  // Cleanup timer when component unmounts\n        }\n    }, [timer]);\n\n    // Handle user answer selection\n    const handleAnswer = (isCorrect) => {\n        if (isCorrect) setScore(score + 1);  // Increment score if answer is correct\n        handleNextQuestion();  // Move to the next question\n    };\n\n    // Move to the next question\n    const handleNextQuestion = async () => {\n        if (currentQuestion < questions.length - 1) {\n            setTimer(30);\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            const token = localStorage.getItem('token'); // Retrieve the token\n    \n            try {\n                await axios.post(\n                    'http://localhost:5000/api/score/admin/score',\n                    {\n                        score: score,\n                        totalQuestions: questions.length\n                    },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${token}` // Send the token in the header\n                        }\n                    }\n                );\n            } catch (err) {\n                console.error(\"Error saving score:\", err);\n            }\n            setQuizCompleted(true);\n        }\n    };\n    \n\n    // Display the results and \"Back to Home\" button\n    const renderQuizCompletion = () => (\n        <div className=\"quiz-completion\">\n            <h2 className=\"quiz-header\">Quiz Completed!</h2>\n            <p className=\"quiz-score\">Your score: {score}/{questions.length}</p>\n            <button\n                className=\"back-home-btn\"\n                onClick={() => navigate('/')}  // Navigate back to the home page\n            >\n                Back to Home\n            </button>\n        </div>\n    );\n\n    // Show loading message if questions are not yet fetched\n    if (!questions.length) return <p>Loading questions...</p>;\n\n    // Display questions if quiz is not completed yet\n    return (\n        <div className=\"quiz-container\">\n            <div className=\"quiz-header-container\">\n                <p className=\"timer\">Time Left: {timer}s</p>\n            </div>\n\n            {quizCompleted ? (\n                renderQuizCompletion()  // Render the completion screen\n            ) : (\n                <>\n                    <h2 className=\"quiz-question\">\n                        Question {currentQuestion + 1}: {questions[currentQuestion].question}\n                    </h2>\n                    <div className=\"quiz-options\">\n                        {questions[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                className=\"quiz-option\"\n                                onClick={() => handleAnswer(index === questions[currentQuestion].correctOption)}  // Check if answer is correct\n                            >\n                                {option}    \n                            </button>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default CodeQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}